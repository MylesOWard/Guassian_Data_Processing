import pandas as pd
import numpy as np
from scipy.optimize import curve_fit

# Raw data from image (chain 1 data, excluding delta = 1)
delta = np.arange(2, 101)
cos_theta = np.array([
    0.052255, -0.043497, -0.182232, 0.670076, 0.044971, 0.028973, -0.10602, 0.492502,
    0.012787, -0.000148, -0.046781, 0.393358, -0.010517, -0.015496, -0.011974, 0.360222,
    -0.012958, -0.020991, -0.016971, 0.30642, 0.001105, -0.027496, -0.039491, 0.222406,
    -0.013973, -0.001126, 0.012712, 0.23098, -0.038673, -0.008966, 0.023535, 0.265258,
    -0.010848, -0.028502, -0.010771, 0.223027, 0.003261, -0.014495, 0.000773, 0.140629,
    0.029796, -0.024125, 0.022046, 0.031725, 0.03988, -0.022284, 0.035933, -0.043631,
    0.03834, -0.027191, 0.037586, -0.133784, 0.031738, -0.016462, 0.026662, -0.202387,
    0.014161, 0.026771, 0.079842, -0.224832, -0.102162, -0.016275, 0.122835, -0.034813,
    -0.060577, -0.030285, 0.0878, 0.092327, 0.009813, -0.092961, -0.064121, -0.074648,
    0.125605, 0.000645, -0.044736, -0.290338, 0.026409, 0.030193, 0.073857, -0.266977,
    -0.108976, -0.041756, 0.144833, 0.028653, -0.058359, 0.000777, 0.11302, 0.131932,
    -0.015933, -0.057149, 0.015497, 0.200895, 0.089078, 0.015196, 0.02294, 0.187433,
    0.212061, 0.15261, 0.0
])

# Only use positive values for fitting
positive_indices = cos_theta > 0
delta_fit = delta[positive_indices]
cos_theta_fit = cos_theta[positive_indices]

# Exponential decay model
def exp_decay(x, Lp):
    return np.exp(-x / Lp)

# Fit curve
popt, _ = curve_fit(exp_decay, delta_fit, cos_theta_fit, bounds=(0.1, 1000))
Lp_estimate = popt[0]
Lp_estimate
Result
4.488944033559793
